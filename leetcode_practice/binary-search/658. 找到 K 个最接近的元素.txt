658. 找到 K 个最接近的元素
给定一个排序好的数组，两个整数 k 和 x，从数组中找到最靠近 x（两数之差最小）的 k 个数。返回的结果必须要是按升序排好的。如果有两个数与 x 的差值一样，优先选择数值较小的那个数。

示例 1:

输入: [1,2,3,4,5], k=4, x=3
输出: [1,2,3,4]
 

示例 2:

输入: [1,2,3,4,5], k=4, x=-1
输出: [1,2,3,4]

还是要思考，太慢
class Solution:
    def findClosestElements(self, arr, k, x):
        """
        :type arr: List[int]
        :type k: int
        :type x: int
        :rtype: List[int]
        """
        copy_arr = arr;
        length = len(copy_arr);
        while length > k:
            l,r = 0,length-1;
            if abs(copy_arr[l]-x) <= abs(copy_arr[r]-x):
                copy_arr.pop();
            else:
                copy_arr.pop(l);
            length = len(copy_arr);
        return copy_arr;
287.寻找重复数
给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。

示例 1:

输入: [1,3,4,2,2]
输出: 2
示例 2:

输入: [3,1,3,4,2]
输出: 3
说明：

不能更改原数组（假设数组是只读的）。
只能使用额外的 O(1) 的空间。
时间复杂度小于 O(n2) 。
数组中只有一个重复的数字，但它可能不止重复出现一次。

我做不来，然后看了评论发现要使用链表，然而我现在还没有复习到，就很尴尬。
然后看题干只有一个重复数。那么可以用差的形式求出这个数。虽然时间有点长，但是好歹做出来了。
接下去要复习一下链表了。
class Solution:
    def findDuplicate(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        sum1 = 0;
        sum2 = 0;
        for x in nums:
            sum1 = sum1 + x;
        nums2 = set(nums);
        for y in nums2:
            sum2 = sum2+y;
        differnts = len(nums)-len(nums2);
        return (sum1-sum2)//differnts;

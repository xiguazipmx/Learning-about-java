给定一个无序的整数数组，找到其中最长上升子序列的长度。

示例:

输入: [10,9,2,5,3,7,101,18]
输出: 4 
解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。

动态规划做到崩溃
class Solution:
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums) == 0:
            return 0;
        max_arr = 1;
        d = [1 for i in range(len(nums))];
        for i in range(1,len(nums)):
            target = d[i];
            for j in range(i):
                if nums[i] > nums[j]:
                    d[i] = d[j] +1 if d[j]+1 > d[i] else d[i];
                    target = d[i] if d[i] > target else target;
                max_arr = max_arr if max_arr>target else target;
        return max_arr;
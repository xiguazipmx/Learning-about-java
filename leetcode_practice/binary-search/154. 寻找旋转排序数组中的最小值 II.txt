154. 寻找旋转排序数组中的最小值 II
假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

请找出其中最小的元素。

注意数组中可能存在重复的元素。

示例 1：

输入: [1,3,5]
输出: 1
示例 2：

输入: [2,2,2,0,1]
输出: 0

我觉得下次遇到还是不会

44ms：无敌模式，这就很尴尬
class Solution:
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        return min(nums);

48ms
class Solution:
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        left,right = 0,len(nums)-1;
        while left <= right:
            mid = (left+right)//2;
            if nums[mid] < nums[right]:
                right = mid;
            elif nums[mid] > nums[right]:
                left = mid+1;
            else:
                right -= 1;
        return nums[mid];

52ms
class Solution:
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        left,right = 0,len(nums)-1;
        while left <= right:
            mid = (left+right)//2;
            if nums[mid] >= nums[left]:
                if nums[mid] <= nums[right]:
                    right -= 1;
                else:
                    left = mid+1;
            elif nums[mid] <= nums[right]:
                if nums[mid] <= nums[left]:
                    left += 1;
                else:
                    right = mid-1;
        return nums[mid];
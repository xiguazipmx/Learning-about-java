35.搜索插入位置
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2
示例 2:

输入: [1,3,5,6], 2
输出: 1
示例 3:

输入: [1,3,5,6], 7
输出: 4
示例 4:

输入: [1,3,5,6], 0
输出: 0


python的排序模块bisect：
	接着看 bisect_left 和 bisect_right 
	函数，该函数用入处理将会插入重复数值的情况，返回将会插入的位置：
方法1：
from bisect import bisect_left
class Solution:
	def searchInsert(self, nums, target):
		return bisect_left(nums,target)
方法二：
class Solution:
	def searchInsert(self, nums, target):
		left = 0;
		right = len(nums)-1;
		index = 0;
		if nums[left] > target:
			return left;
		if nums[right] < target:
			return len(nums);
		while left <= right:
			mid = (left + right)//2;
			if nums[mid] == target:
				return mid;
			elif nums[mid] < target:
				left = mid + 1;
				index = mid +1;
			elif nums[mid] > target:
				right = mid -1;
				index = mid;
		return index;
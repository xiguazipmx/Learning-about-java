230. 二叉搜索树中第K小的元素

给定一个二叉搜索树，编写一个函数 kthSmallest 来查找其中第 k 个最小的元素。

说明：
你可以假设 k 总是有效的，1 ≤ k ≤ 二叉搜索树元素个数。

示例 1:

输入: root = [3,1,4,null,2], k = 1
   3
  / \
 1   4
  \
   2
输出: 1
示例 2:

输入: root = [5,3,6,2,4,null,null,1], k = 3
       5
      / \
     3   6
    / \
   2   4
  /
 1
输出: 3

中序遍历
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def kthSmallest(self, root, k):
        """
        :type root: TreeNode
        :type k: int
        :rtype: int
        """
        def _inorder(root,arr):
            if root:
                _inorder(root.left,arr);
                arr.append(root.val);
                _inorder(root.right,arr);
        arr = [];
        _inorder(root,arr);
        return arr[k-1];
小小改动
 class Solution:
    def kthSmallest(self, root, k):
        """
        :type root: TreeNode
        :type k: int
        :rtype: int
        """
        def _inorder(root,arr):
            if root:
                _inorder(root.left,arr);
                arr.append(root.val);
                if len(arr) >= k:
                    return;
                _inorder(root.right,arr);
        arr = [];
        _inorder(root,arr);
        return arr[k-1];
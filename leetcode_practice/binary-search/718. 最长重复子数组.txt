给两个整数数组 A 和 B ，返回两个数组中公共的、长度最长的子数组的长度。

示例 1:

输入:
A: [1,2,3,2,1]
B: [3,2,1,4,7]
输出: 3
解释: 
长度最长的公共子数组是 [3, 2, 1]。

class Solution:
    def findLength(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        max_arr = 0;
        c = [[0 for i in range(len(A))] for i in range(len(B))]
        for i in range(len(A)):
            for j in range(len(B)):
                if A[i] == B[j]:
                    if i*j == 0:
                        c[i][j] = 1;
                    else:
                        c[i][j] = c[i-1][j-1]+1;
                max_arr = max_arr if max_arr > c[i][j] else c[i][j];
        return max_arr;
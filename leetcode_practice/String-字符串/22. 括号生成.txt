22. 括号生成
给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。

例如，给出 n = 3，生成结果为：

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

递归做，主要还是思路。当然我完全不知咋做
1.加入数组的条件，左括号和右括号都==0
2.当左括号还存在的时候，就往字符串加上左括号
3.当左括号小于右括号时候，就加右括号
class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        def generate(left,right,s,res):
            if left == 0 and right == 0:
                res.append(s);
            if left > 0:
                generate(left-1,right,s+'(',res);
            if right > left:
                generate(left,right-1,s+')',res);
        res = [];
        generate(n,n,'',res);
        return res;
103. 二叉树的锯齿形层次遍历
给定一个二叉树，返回其节点值的锯齿形层次遍历。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回锯齿形层次遍历如下：

[
  [3],
  [20,9],
  [15,7]
]

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return [];
        arr = [root];
        res = [];
        flg = -1;
        while arr:
            tmp = [];
            node = [];
            flg = -flg;
            for n in arr:
                tmp.append(n.val);
                if n.left:
                    node.append(n.left);
                if n.right:
                    node.append(n.right);
            arr = node;
            res.append(tmp[::flg]);
        return res;
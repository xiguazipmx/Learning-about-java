515. 在每个树行中找最大值
您需要在二叉树的每一行中找到最大的值。

示例：

输入: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

输出: [1, 3, 9]

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def largestValues(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        if not root:
            return [];
        arr = [root];
        res = [];
        while arr:
            tmp = arr[0].val;
            node = [];
            for n in arr:
                if n.left:
                    node.append(n.left);
                if n.right:
                    node.append(n.right);
                tmp = max(tmp,n.val);
            arr = node;
            res.append(tmp);
        return res;

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def largestValues(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        if not root:
            return [];
        arr = [root];
        res = [];
        while arr:
            res.append(arr[0].val);
            node = [];
            for n in arr:
                ///这里好酷啊
                if n.val>res[-1]:
                    res[-1] = n.val
                ///
                if n.left:
                    node.append(n.left);
                if n.right:
                    node.append(n.right);
            arr = node;
        return res;
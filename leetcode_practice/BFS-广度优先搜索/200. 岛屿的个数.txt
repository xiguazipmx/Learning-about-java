200. 岛屿的个数
给定一个由 '1'（陆地）和 '0'（水）组成的的二维网格，计算岛屿的数量。一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设网格的四个边均被水包围。

示例 1:

输入:
11110
11010
11000
00000

输出: 1
示例 2:

输入:
11000
11000
00100
00011

输出: 3

思考：连起来的1就是一座岛屿，每次遍历到1是，就给他置0。看遍历几次

class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        if not grid:
            return 0;
        count = 0;
        m,n = len(grid),len(grid[0]);
        def toRot(i,j):
            grid[i][j] = '0';
            if  j > 0 and grid[i][j-1] == "1":
                toRot(i,j-1)
            if j < n-1 and grid[i][j+1] == "1":
                toRot(i,j+1)
            if i > 0 and grid[i-1][j] == "1":
                toRot(i-1,j)
            if i < m-1 and grid[i+1][j] == "1":
                toRot(i+1,j)

        for i in range(m):
            for j in range(n):
                if grid[i][j] == '1':
                    toRot(i,j);
                    count += 1;
        return count;

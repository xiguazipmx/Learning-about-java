279. 完全平方数
给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。

示例 1:

输入: n = 12
输出: 3 
解释: 12 = 4 + 4 + 4.
示例 2:

输入: n = 13
输出: 2
解释: 13 = 4 + 9.


数学的力量真伟大
import math;
class Solution:
    def numSquares(self, n: 'int') -> 'int':
        while n%4 == 0:
            n /= 4;
        if n%8 == 7:
            return 4;
        a = 0;
        while a * a <= n:
            b = int(math.sqrt(n-a*a));
            if a*a + b*b == n:
                return (not not a) + (not not b);
            a+=1;
        return 3;
忘记上传：
class Solution(object):
    def numSquares(self, n):
        """
        :type n: int
        :rtype: int
        """
        step = 0;
        visited = ([n]);
        has_visited = [False for _ in range(n+1)];
        while visited:
            tmp = ([]);
            step += 1;
            for i in visited:
                t = 1;
                tn = i - t*t;
                while tn >= 0:
                    if tn == 0:
                        return step;
                    if not has_visited[tn]:
                        tmp.append(tn);
                    t += 1;
                    tn = i - t*t;
            visited = tmp;
        return step;


class Solution(object):
    def numSquares(self, n):
        """
        :type n: int
        :rtype: int
        """
        res = [];
        res.append([n,0]);
        visited = [False for _ in range(n+1)];
        visited[n] = True;
        while res:
            tmp,step = res.pop(0);
            i = 1;
            muti = tmp - i*i;
            while muti >= 0:
                if muti == 0:
                    return step + 1;
                if not visited[muti]:
                    res.append([muti,step+1]);
                    visited[muti] = True;
                i += 1;
                muti = tmp - i*i;
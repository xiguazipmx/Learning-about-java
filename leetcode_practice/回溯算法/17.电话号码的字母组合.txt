给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。

示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].

虽然慢，但是规律很简单
class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        def findCombination(digits,index,tmp,res,keyMap):
            if index == len(digits):
                res.append(tmp);
                return;
            c = digits[index];
            letters = keyMap[c];
            for letter in letters:
                findCombination(digits,index+1,tmp+letter,res,keyMap);
        result = list()
        if not digits:
            return result
        keyboard={'2':"abc",'3':"def",'4':"ghi",'5':"jkl",'6':"mno",'7':"pqrs",'8':"tuv",'9':"wxyz"};
        
        findCombination(digits,0,'',result,keyboard);
        return result;
